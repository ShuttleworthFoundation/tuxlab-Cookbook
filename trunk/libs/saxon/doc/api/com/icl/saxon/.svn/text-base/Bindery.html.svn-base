<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_06) on Thu Nov 24 12:17:49 GMT 2005 -->
<TITLE>
Bindery
</TITLE>

<META NAME="keywords" CONTENT="com.icl.saxon.Bindery class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Bindery";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../com/icl/saxon/ContentEmitter.html" title="class in com.icl.saxon"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Bindery.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.icl.saxon</FONT>
<BR>
Class Bindery</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by"><B>com.icl.saxon.Bindery</B>
</PRE>
<HR>
<DL>
<DT>public final class <B>Bindery</B><DT>extends java.lang.Object</DL>

<P>
The Bindery class holds information about variables and their values.

 Variables are identified by a Binding object. Values can be any object, though values of XSL
 variables will always be of class Value.
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#Bindery()">Bindery</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#allocateGlobals(int)">allocateGlobals</A></B>(int&nbsp;n)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Define how many slots are needed for global variables</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#allocateLocals(int)">allocateLocals</A></B>(int&nbsp;n)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Define how many slots are needed for local variables.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#assignVariable(com.icl.saxon.Binding, com.icl.saxon.expr.Value)">assignVariable</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
               <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assign a new value to a variable</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#closeStackFrame()">closeStackFrame</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Close the current stack frame for local variables</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#defineGlobalParameters(com.icl.saxon.ParameterSet)">defineGlobalParameters</A></B>(<A HREF="../../../com/icl/saxon/ParameterSet.html" title="class in com.icl.saxon">ParameterSet</A>&nbsp;params)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Define global parameters</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#defineGlobalVariable(com.icl.saxon.Binding, com.icl.saxon.expr.Value)">defineGlobalVariable</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                     <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Define global variable</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#defineLocalVariable(com.icl.saxon.Binding, com.icl.saxon.expr.Value)">defineLocalVariable</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                    <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Define local variable</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#getFrameId()">getFrameId</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the id of the current frame.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#getLocalParameter(int)">getLocalParameter</A></B>(int&nbsp;fingerprint)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get local parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#getValue(com.icl.saxon.Binding)">getValue</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the value of a variable</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#getValue(com.icl.saxon.Binding, int)">getValue</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
         int&nbsp;frameId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the value of a variable in the given frame</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#isEvaluated(com.icl.saxon.Binding)">isEvaluated</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Test if global variable has already been evaluated</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#openStackFrame(com.icl.saxon.ParameterSet)">openStackFrame</A></B>(<A HREF="../../../com/icl/saxon/ParameterSet.html" title="class in com.icl.saxon">ParameterSet</A>&nbsp;localParameters)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Start a new stack frame for local variables</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#setExecuting(com.icl.saxon.Binding, boolean)">setExecuting</A></B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
             boolean&nbsp;executing)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set/Unset a flag to indicate that a particular global variable is currently being
 evaluated.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#useGlobalParameter(int, com.icl.saxon.Binding)">useGlobalParameter</A></B>(int&nbsp;fingerprint,
                   <A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use global parameter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Bindery.html#useLocalParameter(int, com.icl.saxon.Binding)">useLocalParameter</A></B>(int&nbsp;fingerprint,
                  <A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use local parameter.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="Bindery()"><!-- --></A><H3>
Bindery</H3>
<PRE>
public <B>Bindery</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="allocateGlobals(int)"><!-- --></A><H3>
allocateGlobals</H3>
<PRE>
public void <B>allocateGlobals</B>(int&nbsp;n)</PRE>
<DL>
<DD>Define how many slots are needed for global variables
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="defineGlobalParameters(com.icl.saxon.ParameterSet)"><!-- --></A><H3>
defineGlobalParameters</H3>
<PRE>
public void <B>defineGlobalParameters</B>(<A HREF="../../../com/icl/saxon/ParameterSet.html" title="class in com.icl.saxon">ParameterSet</A>&nbsp;params)</PRE>
<DL>
<DD>Define global parameters
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>params</CODE> - The ParameterSet passed in by the user, eg. from the command line</DL>
</DD>
</DL>
<HR>

<A NAME="useGlobalParameter(int, com.icl.saxon.Binding)"><!-- --></A><H3>
useGlobalParameter</H3>
<PRE>
public boolean <B>useGlobalParameter</B>(int&nbsp;fingerprint,
                                  <A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</PRE>
<DL>
<DD>Use global parameter. This is called when a global xsl:param element is processed.
 If a parameter of the relevant name was supplied, it is bound to the xsl:param element.
 Otherwise the method returns false, so the xsl:param default will be evaluated
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fingerprint</CODE> - The fingerprint of the parameter<DD><CODE>binding</CODE> - The XSLParam element to bind its value to
<DT><B>Returns:</B><DD>true if a parameter of this name was supplied, false if not</DL>
</DD>
</DL>
<HR>

<A NAME="defineGlobalVariable(com.icl.saxon.Binding, com.icl.saxon.expr.Value)"><!-- --></A><H3>
defineGlobalVariable</H3>
<PRE>
public void <B>defineGlobalVariable</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                                 <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>&nbsp;value)</PRE>
<DL>
<DD>Define global variable
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - the value of the variable
<DT><B>Throws:</B>
<DD><CODE>SAXException</CODE> - if the variable is already declared</DL>
</DD>
</DL>
<HR>

<A NAME="setExecuting(com.icl.saxon.Binding, boolean)"><!-- --></A><H3>
setExecuting</H3>
<PRE>
public void <B>setExecuting</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                         boolean&nbsp;executing)
                  throws <A HREF="../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD>Set/Unset a flag to indicate that a particular global variable is currently being
 evaluated.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE> - If an attempt is made to set the flag when it is already set, this means
 the definition of the variable is circular.</DL>
</DD>
</DL>
<HR>

<A NAME="isEvaluated(com.icl.saxon.Binding)"><!-- --></A><H3>
isEvaluated</H3>
<PRE>
public boolean <B>isEvaluated</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</PRE>
<DL>
<DD>Test if global variable has already been evaluated
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="allocateLocals(int)"><!-- --></A><H3>
allocateLocals</H3>
<PRE>
public void <B>allocateLocals</B>(int&nbsp;n)</PRE>
<DL>
<DD>Define how many slots are needed for local variables. We work on the basis of
 "one size fits all": all stackframes are allocated as large as the largest one needed
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="openStackFrame(com.icl.saxon.ParameterSet)"><!-- --></A><H3>
openStackFrame</H3>
<PRE>
public void <B>openStackFrame</B>(<A HREF="../../../com/icl/saxon/ParameterSet.html" title="class in com.icl.saxon">ParameterSet</A>&nbsp;localParameters)</PRE>
<DL>
<DD>Start a new stack frame for local variables
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="closeStackFrame()"><!-- --></A><H3>
closeStackFrame</H3>
<PRE>
public void <B>closeStackFrame</B>()</PRE>
<DL>
<DD>Close the current stack frame for local variables
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="useLocalParameter(int, com.icl.saxon.Binding)"><!-- --></A><H3>
useLocalParameter</H3>
<PRE>
public boolean <B>useLocalParameter</B>(int&nbsp;fingerprint,
                                 <A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</PRE>
<DL>
<DD>Use local parameter. This is called when a local xsl:param element is processed.
 If a parameter of the relevant name was supplied, it is bound to the xsl:param element.
 Otherwise the method returns false, so the xsl:param default will be evaluated
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fingerprint</CODE> - The fingerprint of the parameter name<DD><CODE>binding</CODE> - The XSLParam element to bind its value to
<DT><B>Returns:</B><DD>true if a parameter of this name was supplied, false if not</DL>
</DD>
</DL>
<HR>

<A NAME="getLocalParameter(int)"><!-- --></A><H3>
getLocalParameter</H3>
<PRE>
public <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A> <B>getLocalParameter</B>(int&nbsp;fingerprint)</PRE>
<DL>
<DD>Get local parameter. This method is available to user-written node handlers invoked
 via the saxon:handler interface, it allows them to retrieve the values of parameters
 set up within a calling XSL template.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>The value of the parameter, or null if not supplied</DL>
</DD>
</DL>
<HR>

<A NAME="defineLocalVariable(com.icl.saxon.Binding, com.icl.saxon.expr.Value)"><!-- --></A><H3>
defineLocalVariable</H3>
<PRE>
public void <B>defineLocalVariable</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                                <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>&nbsp;value)</PRE>
<DL>
<DD>Define local variable
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>value</CODE> - the value of the variable</DL>
</DD>
</DL>
<HR>

<A NAME="getValue(com.icl.saxon.Binding)"><!-- --></A><H3>
getValue</H3>
<PRE>
public <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A> <B>getValue</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding)</PRE>
<DL>
<DD>Get the value of a variable
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>binding</CODE> - the Binding that establishes the unique instance of the variable
<DT><B>Returns:</B><DD>the Value of the variable if defined, null otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getValue(com.icl.saxon.Binding, int)"><!-- --></A><H3>
getValue</H3>
<PRE>
public <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A> <B>getValue</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                      int&nbsp;frameId)</PRE>
<DL>
<DD>Get the value of a variable in the given frame
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>binding</CODE> - the Binding that establishes the unique instance of the variable<DD><CODE>frameId</CODE> - the id of the frame, see getFrameId
<DT><B>Returns:</B><DD>the Value of the variable if defined, null otherwise.</DL>
</DD>
</DL>
<HR>

<A NAME="getFrameId()"><!-- --></A><H3>
getFrameId</H3>
<PRE>
public int <B>getFrameId</B>()</PRE>
<DL>
<DD>Get the id of the current frame.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>an id, that may be given to getValue(Binding,int)</DL>
</DD>
</DL>
<HR>

<A NAME="assignVariable(com.icl.saxon.Binding, com.icl.saxon.expr.Value)"><!-- --></A><H3>
assignVariable</H3>
<PRE>
public void <B>assignVariable</B>(<A HREF="../../../com/icl/saxon/Binding.html" title="interface in com.icl.saxon">Binding</A>&nbsp;binding,
                           <A HREF="../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>&nbsp;value)</PRE>
<DL>
<DD>Assign a new value to a variable
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the Value of the variable
<DT><B>Throws:</B>
<DD><CODE>SAXException</CODE> - if the variable has not been declared</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;<A HREF="../../../com/icl/saxon/ContentEmitter.html" title="class in com.icl.saxon"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Bindery.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
