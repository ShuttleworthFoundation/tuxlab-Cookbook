<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_06) on Thu Nov 24 12:17:50 GMT 2005 -->
<TITLE>
FunctionProxy
</TITLE>

<META NAME="keywords" CONTENT="com.icl.saxon.expr.FunctionProxy class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="FunctionProxy";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/icl/saxon/expr/IntersectionEnumeration.html" title="class in com.icl.saxon.expr"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FunctionProxy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.icl.saxon.expr.Function">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.icl.saxon.expr</FONT>
<BR>
Class FunctionProxy</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">com.icl.saxon.expr.Expression</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr">com.icl.saxon.expr.Function</A>
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><B>com.icl.saxon.expr.FunctionProxy</B>
</PRE>
<HR>
<DL>
<DT>public class <B>FunctionProxy</B><DT>extends <A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr">Function</A></DL>

<P>
This class acts as a proxy for an extension function defined as a method
 in a user-defined class
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.icl.saxon.expr.Function"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.icl.saxon.expr.<A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr">Function</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/icl/saxon/expr/Function.html#argument">argument</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_com.icl.saxon.expr.Expression"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class com.icl.saxon.expr.<A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#staticContext">staticContext</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#FunctionProxy()">FunctionProxy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor: creates an uncommitted FunctionProxy</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#convertJavaObjectToXPath(java.lang.Object, com.icl.saxon.Controller)">convertJavaObjectToXPath</A></B>(java.lang.Object&nbsp;result,
                         <A HREF="../../../../com/icl/saxon/Controller.html" title="class in com.icl.saxon">Controller</A>&nbsp;controller)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Convert a Java object to an XPath value.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/icl/saxon/om/NodeEnumeration.html" title="interface in com.icl.saxon.om">NodeEnumeration</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#enumerate(com.icl.saxon.Context, boolean)">enumerate</A></B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context,
          boolean&nbsp;requireSorted)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return an enumeration of nodes in a nodeset.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#evaluate(com.icl.saxon.Context)">evaluate</A></B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate the function.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#evaluateAsBoolean(com.icl.saxon.Context)">evaluateAsBoolean</A></B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate an expression as a Boolean.<br>
 The result of x.evaluateAsBoolean(c) must be equivalent to x.evaluate(c).asBoolean();
 but optimisations are possible when it is known that a boolean result is required,
 especially in the case of a NodeSet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#evaluateAsNumber(com.icl.saxon.Context)">evaluateAsNumber</A></B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate an expression as a Number.<br>
 The result of x.evaluateAsNumber(c) must be equivalent to x.evaluate(c).asNumber();
 but optimisations are possible when it is known that a numeric result is required,
 especially in the case of a NodeSet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#evaluateAsString(com.icl.saxon.Context)">evaluateAsString</A></B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Evaluate an expression as a String.<br>
 The result of x.evaluateAsString(c) must be equivalent to x.evaluate(c).asString();
 but optimisations are possible when it is known that a string result is required,
 especially in the case of a NodeSet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#getBestFit(com.icl.saxon.expr.Value[])">getBestFit</A></B>(<A HREF="../../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>[]&nbsp;argValues)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the best fit amongst all the candidate methods or constructors</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#getDataType()">getDataType</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine the data type of the expression, if possible</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#getDependencies()">getDependencies</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determine which aspects of the context the expression depends on.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#getName()">getName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the name of the function</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#reduce(int, com.icl.saxon.Context)">reduce</A></B>(int&nbsp;dependencies,
       <A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Perform a partial evaluation of the expression, by eliminating specified dependencies
 on the context.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#setFunctionName(java.lang.Class, java.lang.String)">setFunctionName</A></B>(java.lang.Class&nbsp;reqClass,
                java.lang.String&nbsp;localName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setFunctionName: locates the external class and the method (or candidate methods)
 to which this function relates.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../com/icl/saxon/expr/FunctionProxy.html#simplify()">simplify</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simplify the function (by simplifying its arguments)</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.icl.saxon.expr.Function"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.icl.saxon.expr.<A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr">Function</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/icl/saxon/expr/Function.html#addArgument(com.icl.saxon.expr.Expression)">addArgument</A>, <A HREF="../../../../com/icl/saxon/expr/Function.html#checkArgumentCount(int, int)">checkArgumentCount</A>, <A HREF="../../../../com/icl/saxon/expr/Function.html#display(int)">display</A>, <A HREF="../../../../com/icl/saxon/expr/Function.html#getNumberOfArguments()">getNumberOfArguments</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_com.icl.saxon.expr.Expression"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class com.icl.saxon.expr.<A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#containsReferences()">containsReferences</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#evaluateAsNodeSet(com.icl.saxon.Context)">evaluateAsNodeSet</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#getStaticContext()">getStaticContext</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#indent(int)">indent</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#isContextDocumentNodeSet()">isContextDocumentNodeSet</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#make(java.lang.String, com.icl.saxon.expr.StaticContext)">make</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#outputStringValue(com.icl.saxon.output.Outputter, com.icl.saxon.Context)">outputStringValue</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#setStaticContext(com.icl.saxon.expr.StaticContext)">setStaticContext</A>, <A HREF="../../../../com/icl/saxon/expr/Expression.html#usesCurrent()">usesCurrent</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="FunctionProxy()"><!-- --></A><H3>
FunctionProxy</H3>
<PRE>
public <B>FunctionProxy</B>()</PRE>
<DL>
<DD>Constructor: creates an uncommitted FunctionProxy
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="setFunctionName(java.lang.Class, java.lang.String)"><!-- --></A><H3>
setFunctionName</H3>
<PRE>
public boolean <B>setFunctionName</B>(java.lang.Class&nbsp;reqClass,
                               java.lang.String&nbsp;localName)</PRE>
<DL>
<DD>setFunctionName: locates the external class and the method (or candidate methods)
 to which this function relates. At this
 stage addArguments() will have normally been called, so the number of arguments is known. If no
 method of the required name is located, an exception is saved, but it is not thrown until
 an attempt is made to evaluate the function. All methods that match the required number of
 arguments are saved in a list (candidateMethods), a decision among these methods is made
 at run-time when the types of the actual arguments are known.<p>
 The method is also used while calling
 function-available(). In this case the number of arguments is not known (it will be
 set to zero). We return true if a match was found, regardless of the number of arguments.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>reqClass</CODE> - The Java class name<DD><CODE>localName</CODE> - The local name used in the XPath function call
<DT><B>Returns:</B><DD>true if the function is available (with some number of arguments).</DL>
</DD>
</DL>
<HR>

<A NAME="getDataType()"><!-- --></A><H3>
getDataType</H3>
<PRE>
public int <B>getDataType</B>()</PRE>
<DL>
<DD>Determine the data type of the expression, if possible
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#getDataType()">getDataType</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Value.ANY (meaning not known in advance)</DL>
</DD>
</DL>
<HR>

<A NAME="getName()"><!-- --></A><H3>
getName</H3>
<PRE>
public java.lang.String <B>getName</B>()</PRE>
<DL>
<DD>Get the name of the function
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Function.html#getName()">getName</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr">Function</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the name of the function, as used in XSL expressions, but excluding
 its namespace prefix</DL>
</DD>
</DL>
<HR>

<A NAME="simplify()"><!-- --></A><H3>
simplify</H3>
<PRE>
public <A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A> <B>simplify</B>()
                    throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD>Simplify the function (by simplifying its arguments)
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#simplify()">simplify</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the simplified expression
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getDependencies()"><!-- --></A><H3>
getDependencies</H3>
<PRE>
public int <B>getDependencies</B>()</PRE>
<DL>
<DD>Determine which aspects of the context the expression depends on. The result is
 a bitwise-or'ed value composed from constants such as Context.VARIABLES and
 Context.CURRENT_NODE
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#getDependencies()">getDependencies</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="reduce(int, com.icl.saxon.Context)"><!-- --></A><H3>
reduce</H3>
<PRE>
public <A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A> <B>reduce</B>(int&nbsp;dependencies,
                         <A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)
                  throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD>Perform a partial evaluation of the expression, by eliminating specified dependencies
 on the context.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#reduce(int, com.icl.saxon.Context)">reduce</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dependencies</CODE> - The dependencies to be removed<DD><CODE>context</CODE> - The context to be used for the partial evaluation
<DT><B>Returns:</B><DD>a new expression that does not have any of the specified
 dependencies
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getBestFit(com.icl.saxon.expr.Value[])"><!-- --></A><H3>
getBestFit</H3>
<PRE>
public java.lang.Object <B>getBestFit</B>(<A HREF="../../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A>[]&nbsp;argValues)
                            throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD>Get the best fit amongst all the candidate methods or constructors
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the result is either a Method or a Constructor. In JDK 1.2 these
 have a common superclass, AccessibleObject, but this is not available
 in JDK 1.1, which we still support.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="evaluate(com.icl.saxon.Context)"><!-- --></A><H3>
evaluate</H3>
<PRE>
public <A HREF="../../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A> <B>evaluate</B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)
               throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD>Evaluate the function. <br>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#evaluate(com.icl.saxon.Context)">evaluate</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>context</CODE> - The context in which the function is to be evaluated
<DT><B>Returns:</B><DD>a Value representing the result of the function.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE> - if the function cannot be evaluated.</DL>
</DD>
</DL>
<HR>

<A NAME="evaluateAsString(com.icl.saxon.Context)"><!-- --></A><H3>
evaluateAsString</H3>
<PRE>
public java.lang.String <B>evaluateAsString</B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)
                                  throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></B></DD>
<DD>Evaluate an expression as a String.<br>
 The result of x.evaluateAsString(c) must be equivalent to x.evaluate(c).asString();
 but optimisations are possible when it is known that a string result is required,
 especially in the case of a NodeSet.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#evaluateAsString(com.icl.saxon.Context)">evaluateAsString</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>context</CODE> - The context in which the expression is to be evaluated
<DT><B>Returns:</B><DD>the value of the expression, evaluated in the current context
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="evaluateAsNumber(com.icl.saxon.Context)"><!-- --></A><H3>
evaluateAsNumber</H3>
<PRE>
public double <B>evaluateAsNumber</B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)
                        throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></B></DD>
<DD>Evaluate an expression as a Number.<br>
 The result of x.evaluateAsNumber(c) must be equivalent to x.evaluate(c).asNumber();
 but optimisations are possible when it is known that a numeric result is required,
 especially in the case of a NodeSet.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#evaluateAsNumber(com.icl.saxon.Context)">evaluateAsNumber</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>context</CODE> - The context in which the expression is to be evaluated
<DT><B>Returns:</B><DD>the value of the expression, evaluated in the current context
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="evaluateAsBoolean(com.icl.saxon.Context)"><!-- --></A><H3>
evaluateAsBoolean</H3>
<PRE>
public boolean <B>evaluateAsBoolean</B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context)
                          throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></B></DD>
<DD>Evaluate an expression as a Boolean.<br>
 The result of x.evaluateAsBoolean(c) must be equivalent to x.evaluate(c).asBoolean();
 but optimisations are possible when it is known that a boolean result is required,
 especially in the case of a NodeSet.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#evaluateAsBoolean(com.icl.saxon.Context)">evaluateAsBoolean</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>context</CODE> - The context in which the expression is to be evaluated
<DT><B>Returns:</B><DD>the value of the expression, evaluated in the current context
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="enumerate(com.icl.saxon.Context, boolean)"><!-- --></A><H3>
enumerate</H3>
<PRE>
public <A HREF="../../../../com/icl/saxon/om/NodeEnumeration.html" title="interface in com.icl.saxon.om">NodeEnumeration</A> <B>enumerate</B>(<A HREF="../../../../com/icl/saxon/Context.html" title="class in com.icl.saxon">Context</A>&nbsp;context,
                                 boolean&nbsp;requireSorted)
                          throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></B></DD>
<DD>Return an enumeration of nodes in a nodeset.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html#enumerate(com.icl.saxon.Context, boolean)">enumerate</A></CODE> in class <CODE><A HREF="../../../../com/icl/saxon/expr/Expression.html" title="class in com.icl.saxon.expr">Expression</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>context</CODE> - The context in which the expression is to be evaluated<DD><CODE>requireSorted</CODE> - Indicates whether the nodes are required in document order. If
 this is false, they may come in any order, but there will be no duplicates.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE> - when the expression does not return a nodeset.</DL>
</DD>
</DL>
<HR>

<A NAME="convertJavaObjectToXPath(java.lang.Object, com.icl.saxon.Controller)"><!-- --></A><H3>
convertJavaObjectToXPath</H3>
<PRE>
public static <A HREF="../../../../com/icl/saxon/expr/Value.html" title="class in com.icl.saxon.expr">Value</A> <B>convertJavaObjectToXPath</B>(java.lang.Object&nbsp;result,
                                             <A HREF="../../../../com/icl/saxon/Controller.html" title="class in com.icl.saxon">Controller</A>&nbsp;controller)
                                      throws <A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></PRE>
<DL>
<DD>Convert a Java object to an XPath value. This method is called to handle the result
 of an external function call (but only if the required type is not known),
 and also to process global parameters passed to the stylesheet.
<P>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../com/icl/saxon/expr/XPathException.html" title="class in com.icl.saxon.expr">XPathException</A></CODE></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../com/icl/saxon/expr/Function.html" title="class in com.icl.saxon.expr"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../com/icl/saxon/expr/IntersectionEnumeration.html" title="class in com.icl.saxon.expr"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="FunctionProxy.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#fields_inherited_from_class_com.icl.saxon.expr.Function">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
