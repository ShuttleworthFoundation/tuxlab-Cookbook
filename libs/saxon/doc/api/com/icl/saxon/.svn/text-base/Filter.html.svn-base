<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_06) on Thu Nov 24 12:17:50 GMT 2005 -->
<TITLE>
Filter
</TITLE>

<META NAME="keywords" CONTENT="com.icl.saxon.Filter class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Filter";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../com/icl/saxon/FeatureKeys.html" title="class in com.icl.saxon"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../com/icl/saxon/IdentityTransformerHandler.html" title="class in com.icl.saxon"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Filter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
com.icl.saxon</FONT>
<BR>
Class Filter</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by"><B>com.icl.saxon.Filter</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD>org.xml.sax.XMLFilter, org.xml.sax.XMLReader</DD>
</DL>
<HR>
<DL>
<DT>public class <B>Filter</B><DT>extends java.lang.Object<DT>implements org.xml.sax.XMLFilter</DL>

<P>
<B>Filter</B> is an XMLFilter (a SAX2 filter) that performs a transformation
 taking a SAX stream as input and producing a SAX stream as output.
<P>

<P>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->


<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected </CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#Filter(com.icl.saxon.Controller)">Filter</A></B>(<A HREF="../../../com/icl/saxon/Controller.html" title="class in com.icl.saxon">Controller</A>&nbsp;controller)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a Filter and initialise variables.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.xml.sax.ContentHandler</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getContentHandler()">getContentHandler</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the ContentHandler registered using setContentHandler()</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.xml.sax.DTDHandler</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getDTDHandler()">getDTDHandler</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the current DTD handler.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.xml.sax.EntityResolver</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getEntityResolver()">getEntityResolver</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the current entity resolver.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.xml.sax.ErrorHandler</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getErrorHandler()">getErrorHandler</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the current error handler.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getFeature(java.lang.String)">getFeature</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Look up the value of a feature.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.xml.sax.XMLReader</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getParent()">getParent</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the parent reader.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.Object</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#getProperty(java.lang.String)">getProperty</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Look up the value of a property.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#parse(org.xml.sax.InputSource)">parse</A></B>(org.xml.sax.InputSource&nbsp;input)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Parse an XML document." In the context of a Transformer, this means
 perform a transformation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#parse(java.lang.String)">parse</A></B>(java.lang.String&nbsp;systemId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse (i.e.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setContentHandler(org.xml.sax.ContentHandler)">setContentHandler</A></B>(org.xml.sax.ContentHandler&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register a content handler to receive the output of the transformation
 filter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setDTDHandler(org.xml.sax.DTDHandler)">setDTDHandler</A></B>(org.xml.sax.DTDHandler&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allow an application to register a DTD event handler.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setEntityResolver(org.xml.sax.EntityResolver)">setEntityResolver</A></B>(org.xml.sax.EntityResolver&nbsp;resolver)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allow an application to register an entity resolver.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setErrorHandler(org.xml.sax.ErrorHandler)">setErrorHandler</A></B>(org.xml.sax.ErrorHandler&nbsp;handler)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allow an application to register an error event handler.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setFeature(java.lang.String, boolean)">setFeature</A></B>(java.lang.String&nbsp;name,
           boolean&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the state of a feature.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setParent(org.xml.sax.XMLReader)">setParent</A></B>(org.xml.sax.XMLReader&nbsp;parent)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the parent reader.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../com/icl/saxon/Filter.html#setProperty(java.lang.String, java.lang.Object)">setProperty</A></B>(java.lang.String&nbsp;name,
            java.lang.Object&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the value of a property.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.Object</B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->


<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="Filter(com.icl.saxon.Controller)"><!-- --></A><H3>
Filter</H3>
<PRE>
protected <B>Filter</B>(<A HREF="../../../com/icl/saxon/Controller.html" title="class in com.icl.saxon">Controller</A>&nbsp;controller)</PRE>
<DL>
<DD>Create a Filter and initialise variables. The constructor is protected, because
 the Filter should be created using newXMLFilter() in the SAXTransformerFactory
 class
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="setParent(org.xml.sax.XMLReader)"><!-- --></A><H3>
setParent</H3>
<PRE>
public void <B>setParent</B>(org.xml.sax.XMLReader&nbsp;parent)</PRE>
<DL>
<DD>Set the parent reader.

 <p>This method allows the application to link the filter to
 a parent reader (which may be another filter).  The argument
 may not be null.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setParent</CODE> in interface <CODE>org.xml.sax.XMLFilter</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>parent</CODE> - The parent reader (the supplier of SAX events).</DL>
</DD>
</DL>
<HR>

<A NAME="getParent()"><!-- --></A><H3>
getParent</H3>
<PRE>
public org.xml.sax.XMLReader <B>getParent</B>()</PRE>
<DL>
<DD>Get the parent reader.

 <p>This method allows the application to query the parent
 reader (which may be another filter).  It is generally a
 bad idea to perform any operations on the parent reader
 directly: they should all pass through this filter.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getParent</CODE> in interface <CODE>org.xml.sax.XMLFilter</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The parent filter, or null if none has been set.</DL>
</DD>
</DL>
<HR>

<A NAME="getFeature(java.lang.String)"><!-- --></A><H3>
getFeature</H3>
<PRE>
public boolean <B>getFeature</B>(java.lang.String&nbsp;name)
                   throws org.xml.sax.SAXNotRecognizedException,
                          org.xml.sax.SAXNotSupportedException</PRE>
<DL>
<DD>Look up the value of a feature.

 <p>The feature name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a feature name but
 to be unable to return its value; this is especially true
 in the case of an adapter for a SAX1 Parser, which has
 no way of knowing whether the underlying parser is
 performing validation or expanding external entities.</p>

 <p>All XMLReaders are required to recognize the
 http://xml.org/sax/features/namespaces and the
 http://xml.org/sax/features/namespace-prefixes feature names.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getFeature</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The feature name, which is a fully-qualified URI.
<DT><B>Returns:</B><DD>The current state of the feature (true or false).
<DT><B>Throws:</B>
<DD><CODE>org.xml.sax.SAXNotRecognizedException</CODE> - When the
            XMLReader does not recognize the feature name.
<DD><CODE>org.xml.sax.SAXNotSupportedException</CODE> - When the
            XMLReader recognizes the feature name but
            cannot determine its value at this time.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#setFeature(java.lang.String, boolean)"><CODE>setFeature(java.lang.String, boolean)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setFeature(java.lang.String, boolean)"><!-- --></A><H3>
setFeature</H3>
<PRE>
public void <B>setFeature</B>(java.lang.String&nbsp;name,
                       boolean&nbsp;value)
                throws org.xml.sax.SAXNotRecognizedException,
                       org.xml.sax.SAXNotSupportedException</PRE>
<DL>
<DD>Set the state of a feature.

 <p>The feature name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a feature name but
 to be unable to set its value; this is especially true
 in the case of an adapter for a SAX1 <CODE>Parser</CODE>,
 which has no way of affecting whether the underlying parser is
 validating, for example.</p>

 <p>All XMLReaders are required to support setting
 http://xml.org/sax/features/namespaces to true and
 http://xml.org/sax/features/namespace-prefixes to false.</p>

 <p>Some feature values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a parse.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setFeature</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The feature name, which is a fully-qualified URI.
<DT><B>Throws:</B>
<DD><CODE>org.xml.sax.SAXNotRecognizedException</CODE> - When the
            XMLReader does not recognize the feature name.
<DD><CODE>org.xml.sax.SAXNotSupportedException</CODE> - When the
            XMLReader recognizes the feature name but
            cannot set the requested value.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#getFeature(java.lang.String)"><CODE>getFeature(java.lang.String)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getProperty(java.lang.String)"><!-- --></A><H3>
getProperty</H3>
<PRE>
public java.lang.Object <B>getProperty</B>(java.lang.String&nbsp;name)
                             throws org.xml.sax.SAXNotRecognizedException,
                                    org.xml.sax.SAXNotSupportedException</PRE>
<DL>
<DD>Look up the value of a property.

 <p>The property name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a property name but
 to be unable to return its state; this is especially true
 in the case of an adapter for a SAX1 <CODE>Parser</CODE>.</p>

 <p>XMLReaders are not required to recognize any specific
 property names, though an initial core set is documented for
 SAX2.</p>

 <p>Some property values may be available only in specific
 contexts, such as before, during, or after a parse.</p>

 <p>Implementors are free (and encouraged) to invent their own properties,
 using names built on their own URIs.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getProperty</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The property name, which is a fully-qualified URI.
<DT><B>Returns:</B><DD>The current value of the property.
<DT><B>Throws:</B>
<DD><CODE>org.xml.sax.SAXNotRecognizedException</CODE> - When the
            XMLReader does not recognize the property name.
<DD><CODE>org.xml.sax.SAXNotSupportedException</CODE> - When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#setProperty(java.lang.String, java.lang.Object)"><CODE>setProperty(java.lang.String, java.lang.Object)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setProperty(java.lang.String, java.lang.Object)"><!-- --></A><H3>
setProperty</H3>
<PRE>
public void <B>setProperty</B>(java.lang.String&nbsp;name,
                        java.lang.Object&nbsp;value)
                 throws org.xml.sax.SAXNotRecognizedException,
                        org.xml.sax.SAXNotSupportedException</PRE>
<DL>
<DD>Set the value of a property.

 <p>The property name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a property name but
 to be unable to set its value; this is especially true
 in the case of an adapter for a SAX1 <CODE>Parser</CODE>.</p>

 <p>XMLReaders are not required to recognize setting
 any specific property names, though a core set is provided with
 SAX2.</p>

 <p>Some property values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a parse.</p>

 <p>This method is also the standard mechanism for setting
 extended handlers.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setProperty</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - The property name, which is a fully-qualified URI.
<DT><B>Throws:</B>
<DD><CODE>org.xml.sax.SAXNotRecognizedException</CODE> - When the
            XMLReader does not recognize the property name.
<DD><CODE>org.xml.sax.SAXNotSupportedException</CODE> - When the
            XMLReader recognizes the property name but
            cannot set the requested value.</DL>
</DD>
</DL>
<HR>

<A NAME="setContentHandler(org.xml.sax.ContentHandler)"><!-- --></A><H3>
setContentHandler</H3>
<PRE>
public void <B>setContentHandler</B>(org.xml.sax.ContentHandler&nbsp;handler)</PRE>
<DL>
<DD>Register a content handler to receive the output of the transformation
 filter. If the content handler is also a LexicalHandler, and if no LexicalHandler
 is separately registered, the ContentHandler will also act as the LexicalHandler
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setContentHandler</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getContentHandler()"><!-- --></A><H3>
getContentHandler</H3>
<PRE>
public org.xml.sax.ContentHandler <B>getContentHandler</B>()</PRE>
<DL>
<DD>Get the ContentHandler registered using setContentHandler()
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getContentHandler</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setEntityResolver(org.xml.sax.EntityResolver)"><!-- --></A><H3>
setEntityResolver</H3>
<PRE>
public void <B>setEntityResolver</B>(org.xml.sax.EntityResolver&nbsp;resolver)</PRE>
<DL>
<DD>Allow an application to register an entity resolver.

 <p>If the application does not register an entity resolver,
 the XMLReader will perform its own default resolution.</p>

 <p>Applications may register a new or different resolver in the
 middle of a parse, and the SAX parser must begin using the new
 resolver immediately.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setEntityResolver</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>resolver</CODE> - The entity resolver.
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - If the resolver
            argument is null.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#getEntityResolver()"><CODE>getEntityResolver()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getEntityResolver()"><!-- --></A><H3>
getEntityResolver</H3>
<PRE>
public org.xml.sax.EntityResolver <B>getEntityResolver</B>()</PRE>
<DL>
<DD>Return the current entity resolver.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getEntityResolver</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Always null, since no entity resolver is used even if one
 is supplied.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#setEntityResolver(org.xml.sax.EntityResolver)"><CODE>setEntityResolver(org.xml.sax.EntityResolver)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setDTDHandler(org.xml.sax.DTDHandler)"><!-- --></A><H3>
setDTDHandler</H3>
<PRE>
public void <B>setDTDHandler</B>(org.xml.sax.DTDHandler&nbsp;handler)</PRE>
<DL>
<DD>Allow an application to register a DTD event handler.

 <p>If the application does not register a DTD handler, all DTD
 events reported by the SAX parser will be silently ignored.</p>

 <p>Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setDTDHandler</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>handler</CODE> - The DTD handler.
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - If the handler
            argument is null.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#getDTDHandler()"><CODE>getDTDHandler()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getDTDHandler()"><!-- --></A><H3>
getDTDHandler</H3>
<PRE>
public org.xml.sax.DTDHandler <B>getDTDHandler</B>()</PRE>
<DL>
<DD>Return the current DTD handler.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getDTDHandler</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>Always null, since no DTD handler is used even if one has been
 supplied.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#setDTDHandler(org.xml.sax.DTDHandler)"><CODE>setDTDHandler(org.xml.sax.DTDHandler)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setErrorHandler(org.xml.sax.ErrorHandler)"><!-- --></A><H3>
setErrorHandler</H3>
<PRE>
public void <B>setErrorHandler</B>(org.xml.sax.ErrorHandler&nbsp;handler)</PRE>
<DL>
<DD>Allow an application to register an error event handler.

 <p>If the application does not register an error handler, all
 error events reported by the SAX parser will be silently
 ignored; however, normal processing may not continue.  It is
 highly recommended that all SAX applications implement an
 error handler to avoid unexpected bugs.</p>

 <p>Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>setErrorHandler</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>handler</CODE> - The error handler.
<DT><B>Throws:</B>
<DD><CODE>java.lang.NullPointerException</CODE> - If the handler
            argument is null.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#getErrorHandler()"><CODE>getErrorHandler()</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="getErrorHandler()"><!-- --></A><H3>
getErrorHandler</H3>
<PRE>
public org.xml.sax.ErrorHandler <B>getErrorHandler</B>()</PRE>
<DL>
<DD>Return the current error handler.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>getErrorHandler</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The current error handler, or null if none
         has been registered.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#setErrorHandler(org.xml.sax.ErrorHandler)"><CODE>setErrorHandler(org.xml.sax.ErrorHandler)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="parse(org.xml.sax.InputSource)"><!-- --></A><H3>
parse</H3>
<PRE>
public void <B>parse</B>(org.xml.sax.InputSource&nbsp;input)
           throws java.io.IOException,
                  org.xml.sax.SAXException</PRE>
<DL>
<DD>"Parse an XML document." In the context of a Transformer, this means
 perform a transformation. The method is equivalent to transform().
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>parse</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>org.xml.sax.SAXException</CODE> - Any SAX exception, possibly
            wrapping another exception.
<DD><CODE>java.io.IOException</CODE> - An IO exception from the parser,
            possibly from a byte stream or character stream
            supplied by the application.<DT><B>See Also:</B><DD><CODE>InputSource</CODE>, 
<A HREF="../../../com/icl/saxon/Filter.html#parse(java.lang.String)"><CODE>parse(java.lang.String)</CODE></A>, 
<A HREF="../../../com/icl/saxon/Filter.html#setEntityResolver(org.xml.sax.EntityResolver)"><CODE>setEntityResolver(org.xml.sax.EntityResolver)</CODE></A>, 
<A HREF="../../../com/icl/saxon/Filter.html#setDTDHandler(org.xml.sax.DTDHandler)"><CODE>setDTDHandler(org.xml.sax.DTDHandler)</CODE></A>, 
<A HREF="../../../com/icl/saxon/Filter.html#setContentHandler(org.xml.sax.ContentHandler)"><CODE>setContentHandler(org.xml.sax.ContentHandler)</CODE></A>, 
<A HREF="../../../com/icl/saxon/Filter.html#setErrorHandler(org.xml.sax.ErrorHandler)"><CODE>setErrorHandler(org.xml.sax.ErrorHandler)</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="parse(java.lang.String)"><!-- --></A><H3>
parse</H3>
<PRE>
public void <B>parse</B>(java.lang.String&nbsp;systemId)
           throws java.io.IOException,
                  org.xml.sax.SAXException</PRE>
<DL>
<DD>Parse (i.e. transform) an XML document from a system identifier (URI).

 <p>This method is a shortcut for the common case of reading a
 document from a system identifier.  It is the exact
 equivalent of the following:</p>

 <pre>
 parse(new InputSource(systemId));
 </pre>

 <p>If the system identifier is a URL, it must be fully resolved
 by the application before it is passed to the parser.</p>
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE>parse</CODE> in interface <CODE>org.xml.sax.XMLReader</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>systemId</CODE> - The system identifier (URI).
<DT><B>Throws:</B>
<DD><CODE>org.xml.sax.SAXException</CODE> - Any SAX exception, possibly
            wrapping another exception.
<DD><CODE>java.io.IOException</CODE> - An IO exception from the parser,
            possibly from a byte stream or character stream
            supplied by the application.<DT><B>See Also:</B><DD><A HREF="../../../com/icl/saxon/Filter.html#parse(org.xml.sax.InputSource)"><CODE>parse(org.xml.sax.InputSource)</CODE></A></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../com/icl/saxon/FeatureKeys.html" title="class in com.icl.saxon"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../com/icl/saxon/IdentityTransformerHandler.html" title="class in com.icl.saxon"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Filter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
